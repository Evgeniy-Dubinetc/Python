print("Задача 5")
# Подумайте, как можно сделать оптимизацию кода по памяти, по скорости.
# Представлен список чисел. Определить элементы списка, не имеющие повторений.
# Сформировать из этих элементов список с сохранением порядка их следования в исходном списке, например:
# src = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]
# result = [23, 1, 3, 10, 4, 11]
# Подсказка: напишите сначала решение «в лоб». Потом подумайте об оптимизации.

# from time import perf_counter
src = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]
# start = perf_counter()
# оптимизация кода по памяти
# с помощью count определяю кол-во повторений элементов в списке, если кол-во повторений равно 1, наполняю список
print([i for i in src if src.count(i) == 1])
# print(perf_counter() - start)


# оптимизация кода по скорости
# start = perf_counter()
# создаю пустой список
my_list = []
# в цикле с помощью count определяю количество повторений элементов в списке, и с помощью append наполняю список
for number in src:
    if src.count(number) == 1:
        my_list.append(number)
print(my_list)
# print(perf_counter() - start)
